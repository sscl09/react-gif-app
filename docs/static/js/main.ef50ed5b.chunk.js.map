{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,0BAAMC,SAVU,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAExCN,EAAc,MAKV,2BACEO,KAAK,OACLC,SAjBkB,SAACN,GACzBF,EAAcE,EAAEO,OAAOC,QAiBjBA,MAAOX,M,uBCzBJY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWdM,GAXc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAK,GACLa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAM,SAAAd,GACHY,EAAS,CACPf,KAAMG,EACNU,SAAS,SAGhB,CAAEpB,IAEEqB,EDbwBI,CAAazB,GAAhCa,EAD2B,EAChCN,KAAaa,EADmB,EACnBA,QAGpB,OACE,oCACE,4BAAKpB,GAEHoB,GAAW,yCAEb,yBAAKJ,UAAU,aACb,4BACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,WEb7BiB,EAAe,WAAO,IAAD,EACIzC,mBAAS,CAAC,SADd,mBACzB0C,EADyB,KACb3C,EADa,KAEhC,OACE,6BACE,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEM2C,EAAWnB,KAAK,SAACT,GAAD,OACd,kBAAC,EAAD,CACEA,SAAUA,EACV0B,IAAK1B,UCXrB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ef50ed5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  \n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n  \n  const handleSumit = (e) => {\n    e.preventDefault();\n\n    if ( inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n    }\n    setInputValue('');\n  }\n\n  return (\n      <form onSubmit={handleSumit}>\n        <input \n          type=\"text\"\n          onChange={handleInputChange}\n          value={inputValue}  \n        />\n      </form>\n  )\n}\n\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HM0NPkH6iPFMrAHdFcJSdI7OJ1ZQPueM`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__bounce\">\n      <img src={ url } alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from '../components/GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const {data:images, loading} = useFetchGifs(category);\n  //console.log(category);\n\n  return (\n    <>\n      <h2>{category}</h2>\n\n      { loading && <p>loading...</p>}\n\n      <div className=\"card-grid\">\n        <ol>\n          {images.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data:[], \n    loading: true\n  });\n  useEffect(() => {\n    getGifs(category)\n      .then( img => {\n          setstate({\n            data: img, \n            loading: false\n        });\n      })\n  }, [ category ]);\n\n  return state;\n};","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GitExpertApp = () => {\n  const [categories, setCategories] = useState(['Hola']);\n  return (\n    <div>\n      <h2>Git expert app</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr/>\n      <ol>\n        { \n            categories.map( (category) => (\n              <GifGrid \n                category={category}\n                key={category}\n              /> \n            ))\n        }\n      </ol>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GitExpertApp } from './GitExpertApp' \n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}